require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
require "json"
string = File.read("service.json")
configuration = JSON.parse(string, :symbolize_names => true)
spawner = Fate.new(configuration, :service_log => "logs/service.log")

spawner.start do
  # run your tests
  # when this block finishes evaluation, Fate shuts down the service
end
```
green 1
blue 1
blue 1
green 1
test/driver.rb:8:in `sleep': Interrupt
	from test/driver.rb:8:in `block in <main>'
	from test/driver.rb:5:in `loop'
	from test/driver.rb:5:in `<main>'
blue 1
green 1
green 2
green 3
blue 2
green 4
blue 3
green 5
green 6
test/driver.rb:8:in `sleep': Interrupt
	from test/driver.rb:8:in `block in <main>'
	from test/driver.rb:5:in `loop'
	from test/driver.rb:5:in `<main>'
test/driver.rb:8:in `sleep': Interrupt
	from test/driver.rb:8:in `block in <main>'
	from test/driver.rb:5:in `loop'
	from test/driver.rb:5:in `<main>'
green 1
blue 1
green 2
green 3
green 4
blue 2
green 5
green 6
blue 3
test/driver.rb:8:in `sleep': Interrupt
	from test/driver.rb:8:in `block in <main>'
	from test/driver.rb:5:in `loop'
	from test/driver.rb:5:in `<main>'
test/driver.rb:8:in `sleep': Interrupt
	from test/driver.rb:8:in `block in <main>'
	from test/driver.rb:5:in `loop'
	from test/driver.rb:5:in `<main>'
Test blue 1
Test blue 2
Test blue 3
Test blue 4
Test blue 5
Test blue 1
Test blue 2
Test blue 3
test/driver.rb:8:in `sleep': Interrupt
	from test/driver.rb:8:in `block in <main>'
	from test/driver.rb:5:in `loop'
	from test/driver.rb:5:in `<main>'
